openapi: 3.0.0
info:
  title: Translation Management API
  description: API for managing translations, locales, and tags
  version: 1.0.0
  contact:
    name: API Support
    email: support@example.com

servers:
  - url: http://localhost:8000/api/v1
    description: Local development server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
          format: email
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Translation:
      type: object
      properties:
        id:
          type: integer
          format: int64
        locale_id:
          type: integer
          format: int64
        key:
          type: string
        value:
          type: string
        group:
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Locale:
      type: object
      properties:
        id:
          type: integer
          format: int64
        code:
          type: string
        name:
          type: string
        is_active:
          type: boolean
        is_default:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Error:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string

paths:
  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - password
                - password_confirmation
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                password_confirmation:
                  type: string
                  format: password
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/User'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
                      token:
                        type: string
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/profile:
    get:
      tags:
        - Authentication
      summary: Get authenticated user profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/logout:
    post:
      tags:
        - Authentication
      summary: Logout user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string

  /translations:
    get:
      tags:
        - Translations
      summary: List translations
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: locale
          schema:
            type: string
          description: Filter by locale code
        - in: query
          name: tags
          schema:
            type: string
          description: Filter by tag names (comma-separated)
        - in: query
          name: query
          schema:
            type: string
          description: Search in key and value
      responses:
        '200':
          description: List of translations
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Translation'
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                      last_page:
                        type: integer
                      per_page:
                        type: integer
                      total:
                        type: integer

    post:
      tags:
        - Translations
      summary: Create a new translation
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - locale_id
                - key
                - value
                - group
              properties:
                locale_id:
                  type: integer
                  format: int64
                key:
                  type: string
                value:
                  type: string
                group:
                  type: string
                tags:
                  type: array
                  items:
                    type: integer
                    format: int64
      responses:
        '201':
          description: Translation created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Translation'

  /translations/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
          format: int64
        description: Translation ID

    get:
      tags:
        - Translations
      summary: Get a specific translation
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Translation details
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Translation'

    put:
      tags:
        - Translations
      summary: Update a translation
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - locale_id
                - key
                - value
                - group
              properties:
                locale_id:
                  type: integer
                  format: int64
                key:
                  type: string
                value:
                  type: string
                group:
                  type: string
                tags:
                  type: array
                  items:
                    type: integer
                    format: int64
      responses:
        '200':
          description: Translation updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Translation'

    delete:
      tags:
        - Translations
      summary: Delete a translation
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Translation deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string

  /translations/search:
    get:
      tags:
        - Translations
      summary: Search translations
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: q
          required: true
          schema:
            type: string
          description: Search query
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Translation'

  /locales:
    get:
      tags:
        - Locales
      summary: List locales
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of locales
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Locale'

    post:
      tags:
        - Locales
      summary: Create a new locale
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - code
                - name
              properties:
                code:
                  type: string
                name:
                  type: string
                is_active:
                  type: boolean
      responses:
        '201':
          description: Locale created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Locale'

  /locales/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
          format: int64
        description: Locale ID

    put:
      tags:
        - Locales
      summary: Update a locale
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - code
                - name
              properties:
                code:
                  type: string
                name:
                  type: string
                is_active:
                  type: boolean
      responses:
        '200':
          description: Locale updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Locale'

    delete:
      tags:
        - Locales
      summary: Delete a locale
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Locale deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string

  /tags:
    get:
      tags:
        - Tags
      summary: List tags
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of tags
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Tag'

    post:
      tags:
        - Tags
      summary: Create a new tag
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                description:
                  type: string
      responses:
        '201':
          description: Tag created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Tag'

  /tags/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
          format: int64
        description: Tag ID

    put:
      tags:
        - Tags
      summary: Update a tag
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                description:
                  type: string
      responses:
        '200':
          description: Tag updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Tag'

    delete:
      tags:
        - Tags
      summary: Delete a tag
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Tag deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string 